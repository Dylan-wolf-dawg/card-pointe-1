################################################################################
# Copyrights Â© 2021-2022 Fiserv, Inc. or its affiliates.
# Fiserv is a trademark of Fiserv, Inc.,
# registered or used in the United States and foreign countries,
# and may or may not be registered in your country.
# All trademarks, service marks,
# and trade names referenced in this
# material are the property of their
# respective owners. This work, including its contents
# and programming, is confidential and its use
# is strictly limited. This work is furnished only
# for use by duly authorized licensees of Fiserv, Inc.
# or its affiliates, and their designated agents
# or employees responsible for installation or
# operation of the products. Any other use,
# duplication, or dissemination without the
# prior written consent of Fiserv, Inc.
# or its affiliates is strictly prohibited.
# Except as specified by the agreement under
# which the materials are furnished, Fiserv, Inc.
# and its affiliates do not accept any liabilities
# with respect to the information contained herein
# and are not responsible for any direct, indirect,
# special, consequential or exemplary damages
# resulting from the use of this information.
# No warranties, either express or implied,
# are granted or extended by this work or
# the delivery of this work
################################################################################

openapi: 3.0.2
info:
  title: CardSecure API Service Endpoints
  description: This API documentation provides technical guidance when utilizing CardSecure.
  version: 1.0.0
servers:
 - {url: 'DNE', description: Production}
 - {url: 'DNE', description: Sandbox}
paths:
  /api/v2/listTerminals:
    post:
      tags:
        - listTerminals Endpoint Definition
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: listTerminals
      summary: The listTerminals endpoint returns an array of Hardware Serial Numbers (HSNs) for each terminal for the specified <bold>Merchant ID</bold>.
      description: |+
        The listTerminals endpoint returns an array of Hardware Serial Numbers (HSNs) for each terminal for the specified merchant ID.
        This array can be displayed to prompt a user to select the terminal HSN to pair or use with the POS application.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/listTerminalsRequest'
            examples:
              listTerminals Example:
                $ref: '#/components/examples/listTerminalsExample'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/listTerminalsSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /api/v3/terminalDetails:
    post:
      tags:
        - terminalDetails Endpoint Definition
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: terminalDetails
      summary: The terminalDetails endpoint returns an array of terminals for the specified **Merchant ID**.
      description: |+
        A call to the <code>terminalDetails</code> endpoint returns an array of terminals associated with the merchant ID specified in the request. The response includes one or more objects containing the hardware serial number (HSN), model, status, and features supported for each device. 
        This can be useful for merchants with multiple terminal models, to determine which supports signature capture or receipt printing, or for merchants with multiple locations, who need to determine which terminals are associated with each merchant ID. 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/terminalDetailsRequest'
            examples:
              terminalDetails Example:
                $ref: '#/components/examples/terminalDetailsExample'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/terminalDetailsSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /api/v2/dateTime:
    put:
      tags:
        - dateTime Endpoint Definition
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: dateTime
      summary: "The dateTime endpoint sends a request to change a terminal's date and time."
      description: |+
        A call to the <code>dateTime</code> endpoint sends a request to the specified terminal to set the system time for a terminal.
        You should include the dateTime request into your terminal connection workflow to ensure that the time for a terminal is accurate for transaction reporting and receipts, and to ensure that the nightly PCI reboot for the terminal occurs outside of your business hours, as intended.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/dateTimeRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
        - {$ref: '#/components/parameters/X-CardConnect-SessionKey'}
      responses:
        200: 
          description: Success
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}  
  /api/v2/getPanPadVersion:
    post:
      tags:
        - getPanPadVersion
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: dateTime
      summary: Returns PanPad version number
      description: |+
        A call to the getPanPadVersion endpoint returns the version of the terminal application running on the specified Ingenico terminal.
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/getPanPadVersionRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
        - {$ref: '#/components/parameters/X-CardConnect-SessionKey'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/getPanPadVersionSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /api/v2/ping:
    post:
      tags:
        - ping
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: ping
      summary: A call to the ping endpoint sends a ping command to the specified terminal. The response is true if communication with the terminal is successful. 
      description: |+
        A call to the ping endpoint sends a ping command to the specified terminal. The response is true if communication with the terminal is successful. 
        You might want to send intermittent ping requests to the terminal to monitor the connection of the terminal to the terminal service.      
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/ping'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
        - {$ref: '#/components/parameters/X-CardConnect-SessionKey'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/pingSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /api/v2/preconnect:
    post:
      tags:
        - preconnect
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: preconnect
      summary: The preconnect endpoint initiates a two-factor authentication process between the terminal and the terminal service.
      description: |+
        The preconnect endpoint initiates a two-factor authentication process between the terminal and the terminal service. a successful response displays a 6 character alpha-numeric token on the terminal, which must then be used to make a connect request to establish a session with the terminal service. The token displays for 60 seconds (configurable), or until a successful connect request is made. 

        To use this feature, two-factor authentication must be enabled for the merchant. Note that two-factor authentication is required when it is enabled.

        * The preconnect endpoint is currently **NOT** supported for Clover terminals.
        * The preconnect endpoint is **NOT** required for Ingenico terminals. To use this feature, two-factor authentication must be enabled for the merchant. Note that two-factor authentication is required when it is enabled.
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/preconnectRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/preconnectSuccess'}
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /api/v2/connect:
    post:
      tags:
        - connect
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: connect
      summary: A call to the connect endpoint establishes a session between the terminal and the terminal service. The response returns a session key to use in subsequent requests to the terminal.
      description: |+
        A call to the connect endpoint establishes a session between the terminal and the terminal service. The response returns a session key to use in subsequent requests to the terminal.

        For example, if the response header returns 

        **X-CardConnect-SessionKey âf4fb39ff5c9c4299b3d7b34ca7ce2348;expires=2018-09-25T16:26:48.482Z**

        Then each subsequent request header must be:

        **X-CardConnect-SessionKey: f4fb39ff5c9c4299b3d7b34ca7ce2348**

        If you use the **preconnect** endpoint to obtain an authorization token for two-factor authentication, you must also include the token in the connect request.
        
        If force is set to true, any existing sessions will be destroyed and all in-flight operations on the terminal will be cancelled. The force parameter is optional and defaults to false.
        
        See Establishing a Session for more information.
        
        Once the session is complete, call the disconnect endpoint to end the session. Otherwise, the session key will expire at the the ISO-8601 expiration timestamp included in the initial connect response.
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/connectRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
      responses:
        200: 
          description: Success
          headers:
            X-CardConnect-SessionKey:
              schema:
                type: integer
                example: âf4fb39ff5c9c4299b3d7b34ca7ce2348;expires=2018-09-25T16:26:48.482Z
              description: The session key for the established connection.
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /api/v2/disconnect:
    put:
      tags:
        - disconnect
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: disconnect
      summary: A call to the disconnect endpoint closes the session and releases the session key provided in the request header.

      description: |+
        A call to the disconnect endpoint closes the session and releases the session key provided in the request header. The session key can not be used in any subsequent requests; you must call the connect endpoint to retrieve a new session key.
        * The disconnect command **does not** cancel an in-flight transaction (for example an **authCard** request in progress). To terminate an in-flight transaction, call the **cancel** endpoint.

      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/disconnectRequest'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
        - {$ref: '#/components/parameters/X-CardConnect-SessionKey'}
      responses:
        200: 
          description: Success
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
  /api/v2/display:
    post:
      tags:
        - display
      x-group-name: CardPointe Integrated Terminal API
      x-proxy-name: display
      summary: A call to the display endpoint sends a text string, which is displayed on the idle terminal. 
      description: |+
        A call to the **display** endpoint sends a text string, which is displayed on the idle terminal.
        
        On a Clover terminal, sending either a single or multi-line message replaces the idle image with the message, along with the logo image (if one is configured for the device).
        
        On an Ingenico terminal:
        
        Sending a single-line string displays the text in the display footer area, retaining the idle image.
        
        Sending a multi-line string displays the text in the primary display area, replacing the idle image.
        
        Additionally, you can send a blank string, which clears any existing prompts and returns the terminal display to an idle state. You can also call the clearDisplay endpoint to clear the terminal display.
        * For Ingenico terminals, to include a percent sign (%) in the display text, you must include two percent signs (%%) in the request. If you include a single percent sign, the terminal will display an unexpected message string.
        * The terminal display is limited to 1000 characters.
      requestBody:
        required: true
        content:
          application/json:
            schema: 
              $ref: '#/components/schemas/displayRequest'
            examples:
              Single Line:
                summary: display (Single Line) Request
                $ref: '#/components/examples/displaySingleLineRequestExample'
              Line Break:
                summary: display (Line Break) Request
                $ref: '#/components/examples/displayLineBreakRequestExample'
              Clear:
                summary: display (Clear) Request
                $ref: '#/components/examples/displayClearRequestExample'
      parameters:
        - {$ref: '#/components/parameters/ContentTypeHeader'}
        - {$ref: '#/components/parameters/Authorization'}
        - {$ref: '#/components/parameters/X-CardConnect-SessionKey'}
      responses:
        200: 
          description: Success
        400:
          description: Not Found
          content:
            application/json:
              schema: {$ref: '#/components/schemas/NotFoundError'}
        404:
          description: Bad Request
          content:  
            application/json:
              schema: {$ref: '#/components/schemas/BadRequestError'}
components:
  parameters:
    Authorization:
      x-model-version: 1.0 
      name: Authorization
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: The Terminal API Authorization Key
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    X-CardConnect-SessionKey:
      x-model-version: 1.0
      name: X-CardConnect-SessionKey
      in: header
      schema: {type: integer, format: int64}
      required: true
      description: The session key returned by the **connect** endpoint.
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {
        type: string,
        default: "Message-Digest"
       }
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {
        type: string,
        default: "Accept-Language"
       }
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {
        type: string,
        default: "Api-Key"
       }
      in: header
      required: true
      description: API key provided to the merchant associating the requests with the appropriate app in the Developer Portal.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    AccountParam:
      x-model-version: 1.0
      name: account
      schema: {
          type: string,
          default: 4444333322221111
        }
      in: header
      required: false
      description: This field is required only if devicedata is absent. It must contain either a clear or encrypted payment account number (PAN) or an ACH routing and account number string in the format <routing>/<account> for eCheck transactions.
                    If encryptionhandler is provided, the account is treated as an encrypted PAN.
    DeviceDataParam:
      x-model-version: 1.0
      name: devicedata
      schema: {
          type: string
          }
      in: header
      description: This field is required only if account is absent.
    CVVParam:
      x-model-version: 1.0
      name: cvv
      schema: {
          type: number,
        }
      in: header
      description: Card Verification Value (CVV)
    ExpiryParam:
      x-model-version: 1.0
      name: expiry
      schema:
        {
          type: number,
        }
      in: header
      description: Expiration date
    SigParam:
      x-model-version: 1.0
      name: signature
      schema:
        {
          type: string,
        }
      in: header
      description: Signature data is the form of a Base64-encoded, Gzipped bitmap (BMP)
    EncryptHandleParam:
      x-model-version: 1.0
      name: encryptionhandler
      schema:
        {
          type: string,
        }
      in: header
      description: Encryption Handler. Either RSA, EX_APPLE_PAY, EX_GOOGLE_PAY
    UniqueParam:
      x-model-version: 1.0
      name: unique
      schema:
        {
          type: boolean,
        }
      in: header
      description: Specifies whether a unique token should be generated. Defaults to false.
    ErrorCode:
      x-model-version: 1.0
      name: errorcode
      schema:
        type: integer
      in: header
      description: An error code that displays signifying the importance of error codes.
    MessageParam:
      x-model-version: 1.0
      name: message
      schema:
        {
          type: string,
        }
      in: header
      description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
  schemas:
    displayRequest:
      x-model-version: 1.0
      description: display
      properties:
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
        hsn: 
          description: The hardware service number for the terminal.
          type: string
          maxLength: 18
          example: 14012PP20131409
        text:
          description: The text to send to the terminal display. The terminal display is limited to 1000 characters.
            
            To create a line break to display a multi-line message, include \n.
            
            If this field is blank, the terminal display is cleared. 
    connectRequest: 
      x-model-version: 1.0
      description: connect
      properties:
        hsn: 
          description: The hardware service number for the terminal.
          type: string
          maxLength: 18
          example: 14012PP20131409
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
        token:
          type: integer
          description: If two-factor authentication is enabled, you must include the token returned by the **preconnect** endpoint.

            This token is displayed on the terminal.
          maxLength: 6
          example: 123456
        force:
          type: boolean
          description: If set to true, any existing sessions are destroyed and any in-flight operations on the terminal are cancelled.
            If blank, this parameter defaults to defaults to false.
          example: true
    connectSuccess:
      x-model-version: 1.0
      description: Successful connect Response Parameters
      properties:
        X-CardConnect-SessionKey:
          type: integer
          description: The session key for the established connection
          example: âe3072040eb08454dac18ff67cd6c311c;expires=2018-08-22T23:49:55.684Z
    ping:
      x-model-version: 1.0
      description: ping
      properties: 
        hsn: 
          description: The hardware service number for the terminal.
          type: string
          maxLength: 18
          example: 14012PP20131409
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
    pingSuccess:
      x-model-version: 1.0
      description: Returns connected if connected
      properties:
        connected:
          description: Returns true if the terminal is connected to the terminal service, or false if the terminal is not connected.
          example: connected
    getPanPadVersionSuccess:
      x-model-version: 1.0
      description: Pan Pad Version
      properties: 
        version: 
          description: Device version number
          example: 1060011
    listTerminalsSuccess:
      x-model-version: 1.0
      description: List of terminals
      type: object
      properties:
        terminals: {
          description: "An array of Hardware Serial Numbers (HSNs) for each terminal for the specified merchant ID.",
          example:  
             [ 
               "12145SC70108037", 
               "14012PP20131409", 
               "12155SC70113974",
               "12150SC70110741"
             ] 
        }
    terminalDetailsSuccess:
      x-model-version: 1.0
      description: List of terminal information
      properties:
        terminals: {
          description: "An array of Hardware Serial Numbers (HSNs) for each terminal for the specified merchant ID.",
          type: object,
          example:
          [  
          {
            "hsn": "C042UQ93160289",
            "name": "",
            "merchantId": "1234",
            "connected": true,
            "deviceType": "Mini 2",
            "environment": "UAT",
            "deviceCapabilities": {
                "screenDimensionX": 1280,
                "screenDimensionY": 800,
                "pinPad": true,
                "msr": true,
                "emv": true,
                "nfc": true,
                "signature": true,
                "printer": true
                }
            },
          { 
             "hsn":"15225SC90709732",
             "name":"",
             "merchantId":"1234",
             "connected":true,
             "deviceType":"iSC250 Touch",
             "environment":"UAT",
             "deviceCapabilities":
               { 
                "screenDimensionX":480,
                "screenDimensionY":272,
                "pinPad":true,
                "msr":true,
                "emv":true,
                "nfc":true,
                "signature":true,
                "printer":false
               }
          }
                 ] 
                
        }
    NotFoundError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Data not found
        }
    BadRequestError:
      x-model-version: 1.0
      description: Error information
      properties:
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string,
          example: Keystore invalid processor
        }
    ErrorCode: 
      description: An error code. Returns "00" if successful. All error codes contain four digits. Two zeros precede the codes.
      properties:
        code:
          description: An error code that shows the importance of error codes.
          type: integer
    Error:
      x-model-version: 1.0
      description: Error information
      properties:
        type:
          description: 'The type of response either from the HOST, GATEWAY, NETWORK, or APIM.'
          type: string
        code: {
          description: 'Error response code from the host, gateway, or network',
          type: string
        }
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string
        }
    preconnectRequest:
      x-model-version: 1.0
      properties:
        hsn: 
          description: The hardware service number for the terminal.
          type: string
          maxLength: 18
          example: 14012PP20131409
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
    disconnectRequest:
      x-model-version: 1.0 
      properties:
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
        hsn: 
          description: The hardware service number for the terminal.
          type: string
          maxLength: 18
          example: 14012PP20131409
    preconnectSuccess:
      x-model-version: 1.0
      properties:
        token:
          type: integer
          description: The 6-digit token to pass to the **connect** endpoint when two-factor authentication is enabled. This token is displayed on the terminal.
          maxLength: 6
          example: 123456
    Success200:
      x-model-version: 1.0
      description: Success
      example: 'OK'
    dateTimeRequest:
      x-model-version: 1.0
      type: object
      properties:
        dateTime:
          description: |+
            The dateTime value must be formatted as an ISO-8601 local date time (no timezone offset).
            Hyphens (-) for dates and colons (:) for times are required.
          type: string
          maxLength: 20
          example: 2021-02-03T11:30:45
        hsn:
          description: The hardware service number for the terminal.
          type: string
          maxLength: 18
          example: 14012PP20131409
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
    getPanPadVersionRequest:
      x-model-version: 1.0
      type: object
      properties:
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
        hsn:
          description: The hardware service number for the terminal.
          type: string
          maxLength: 18
          example: 14012PP20131409
    listTerminalsRequest:
      x-model-version: 1.0
      type: object
      properties:
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
    terminalDetailsRequest:
      x-model-version: 1.0
      type: object
      properties:
        merchantID:
          description: Your Merchant ID, required for all requests.
          type: string
          maxLength: 16
          example: 1234
  responses:
    listTerminalsResponse:
      x-model-version: 1.0
      description: Contains list of terminals associated with MID.
      content:
        terminals:
          example: { 
             [ 
               "12145SC70108037", 
               "14012PP20131409", 
               "12155SC70113974",
               "12150SC70110741" 
             ] 
            }
    terminalDetailsResponse:
      x-model-version: 1.0
      description: Contains list of terminals associated with MID.
      content:
        terminals:
          example: { 
             [  {
        "hsn": "C042UQ93160289",
        "name": "",
        "merchantId": "1234",
        "connected": true,
        "deviceType": "Mini 2",
        "environment": "UAT",
        "deviceCapabilities": {
            "screenDimensionX": 1280,
            "screenDimensionY": 800,
            "pinPad": true,
            "msr": true,
            "emv": true,
            "nfc": true,
            "signature": true,
            "printer": true
            }
        },
      { 
         "hsn":"15225SC90709732",
         "name":"",
         "merchantId":"1234",
         "connected":true,
         "deviceType":"iSC250 Touch",
         "environment":"UAT",
         "deviceCapabilities":
           { 
            "screenDimensionX":480,
            "screenDimensionY":272,
            "pinPad":true,
            "msr":true,
            "emv":true,
            "nfc":true,
            "signature":true,
            "printer":false
           }
      }
             ] 
            }
    dateTimeSuccess:
      x-model-version: 1.0
      description: Success
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Success200'
    WrongVersion:
      x-model-version: 1.0
      description: Wrong version number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidAction:
      x-model-version: 1.0
      description: Invalid action
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotDecimal:
      x-model-version: 1.0
      description: Data is not decimal digits
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeyIDNotFound:
      x-model-version: 1.0
      description: Key ID is not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooLong:
      x-model-version: 1.0
      description: Data is too long
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataEmpty:
      x-model-version: 1.0
      description: Data is empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownAlgo:
      x-model-version: 1.0
      description: Unknown Algorithm
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EncryptionFailure:
      x-model-version: 1.0
      description: Encryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    Base64Failure:
      x-model-version: 1.0
      description: Base 64 decode failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CryptoWrongLength:
      x-model-version: 1.0
      description: Crypto data is the wrong length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooShort:
      x-model-version: 1.0
      description: Data is too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CCNWrongLength:
      x-model-version: 1.0
      description: CCN wrong length on decryption
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DecryptionFailure:
      x-model-version: 1.0
      description: Decryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadPadding:
      x-model-version: 1.0
      description: Bad PKCS 5 padding
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadDecrypt:
      description: Bad decryption length field
    KeystoreNotInit:
      description: Keystore not initialized
    ApplicationNotInit:
      x-model-version: 1.0
      description: Application not initialized
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BufferTooShort:
      x-model-version: 1.0
      description: Buffer too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    IllegalCharacter:
      x-model-version: 1.0
      description: Illegal characters
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    WrongLength:
      x-model-version: 1.0
      description: Wrong message length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ServerFailed:
      x-model-version: 1.0
      description: Server failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ConfigItemBad:
      x-model-version: 1.0
      description: Config item is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDataProb:
      x-model-version: 1.0
      description: Token database problem
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnAuthHost:
      x-model-version: 1.0
      description: Unauthorized host
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenPurged:
      x-model-version: 1.0
      description: Token Purged
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotFound:
      x-model-version: 1.0
      description: Data not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorHashing:
      x-model-version: 1.0
      description: Error hashing the value
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDuplicate:
      x-model-version: 1.0
      description: Token or data duplicate
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    LuhnFailure:
      x-model-version: 1.0
      description: Card number check (Luhn formula) failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingSiteName:
      x-model-version: 1.0
      description: Missing or unknown site name
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenFormatBad:
      x-model-version: 1.0
      description: Token format is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureInvalid:
      x-model-version: 1.0
      description: Request signature is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureExpired:
      x-model-version: 1.0
      description: Request signature timestamp expired
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureMismatch:
      x-model-version: 1.0
      description: Request signature mismatch
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureFailure:
      x-model-version: 1.0
      description: Request signature failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    PINTranslationFail:
      x-model-version: 1.0
      description: PIN translation fail
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreImportFail:
      x-model-version: 1.0
      description: Keystore import failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreUserstoreFail:
      x-model-version: 1.0
      description: Keystore userstore failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreInvalidProc:
      x-model-version: 1.0
      description: Keystore invalid processor
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthTerminal:
      x-model-version: 1.0
      description: Unauthorized terminal
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreRollbackFail:
      x-model-version: 1.0
      description: Keystore rollback failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthDecrypt:
      x-model-version: 1.0
      description: Unauthorized decrypt
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEMVData:
      x-model-version: 1.0
      description: Invalid EMV tag data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EMVDataEmpty:
      x-model-version: 1.0
      description: EMV tag data empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingReqParam:
      x-model-version: 1.0
      description: Missing required parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEllipticParam:
      x-model-version: 1.0
      description: Invalid elliptic curve type parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONSerializationError:
      x-model-version: 1.0
      description: JSON serialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONDeserializationError:
      x-model-version: 1.0
      description: JSON deserialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidSwipeData:
      x-model-version: 1.0
      description: Invalid swipe data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
  examples:
    displaySingleLineRequestExample:
      value:
        merchantID: '1234'
        hsn: '14012PP20131409'
        text: 'Approved'
    displayLineBreakRequestExample:
      value:
        merchantID: '1234'
        hsn: '14012PP20131409'
        text: Try \n Again
    displayClearRequestExample:
      value:
        merchantID: '1234'
        hsn: '14012PP20131409'
        text: '' 
    Successful:
      value:
        errorcode: 0,
        data: "AAdoWZghKq4An1Pl0PJKDQfTQ"
        message: "No error"
    WrongVersion:
      value:
        type: 'integer'
        code: '003'
        message: 'Message'
    listTerminalsExample:
      value:
        merchantID: '1234'
    listTerminalsResponseExample:
      value:
        terminals: { 
           [ 
             "12145SC70108037", 
             "14012PP20131409", 
             "12155SC70113974",
             "12150SC70110741" 
           ] 
          }
    terminalDetailsExample:
      value:
        merchantID: 1234
    terminalDetailsResponseExample:
      value:
        terminals: { 
        [  
        {
        "hsn": "C042UQ93160289",
        "name": "",
        "merchantId": "1234",
        "connected": true,
        "deviceType": "Mini 2",
        "environment": "UAT",
        "deviceCapabilities": {
            "screenDimensionX": 1280,
            "screenDimensionY": 800,
            "pinPad": true,
            "msr": true,
            "emv": true,
            "nfc": true,
            "signature": true,
            "printer": true
            }
        },
      { 
         "hsn":"15225SC90709732",
         "name":"",
         "merchantId":"1234",
         "connected":true,
         "deviceType":"iSC250 Touch",
         "environment":"UAT",
         "deviceCapabilities":
           { 
            "screenDimensionX":480,
            "screenDimensionY":272,
            "pinPad":true,
            "msr":true,
            "emv":true,
            "nfc":true,
            "signature":true,
            "printer":false
           }
      }
             ] 
            }
