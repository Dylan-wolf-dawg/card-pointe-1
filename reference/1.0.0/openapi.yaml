################################################################################
# Copyrights Â© 2021-2022 Fiserv, Inc. or its affiliates.
# Fiserv is a trademark of Fiserv, Inc.,
# registered or used in the United States and foreign countries,
# and may or may not be registered in your country.
# All trademarks, service marks,
# and trade names referenced in this
# material are the property of their
# respective owners. This work, including its contents
# and programming, is confidential and its use
# is strictly limited. This work is furnished only
# for use by duly authorized licensees of Fiserv, Inc.
# or its affiliates, and their designated agents
# or employees responsible for installation or
# operation of the products. Any other use,
# duplication, or dissemination without the
# prior written consent of Fiserv, Inc.
# or its affiliates is strictly prohibited.
# Except as specified by the agreement under
# which the materials are furnished, Fiserv, Inc.
# and its affiliates do not accept any liabilities
# with respect to the information contained herein
# and are not responsible for any direct, indirect,
# special, consequential or exemplary damages
# resulting from the use of this information.
# No warranties, either express or implied,
# are granted or extended by this work or
# the delivery of this work
################################################################################

openapi: 3.0.2
info:
  title: CardSecure API Service Endpoints
  description: This API documentation provides technical guidance when utilizing CardSecure.
  version: 1.0.0
servers:
 - {url: 'DNE', description: Production}
 - {url: 'DNE', description: Sandbox}
paths:
  /v1/cnn/tokenize:
    post:
      tags:
        - Tokenize Endpoint Definition
      x-group-name: CardSecure
      x-proxy-name: Tokenize
      x-default-example: PaymentCard
      summary: A request to the tokenize endpoint returns a CardSecure token generated from the data provided in the request.
      description: |+
        A request to the tokenize endpoint returns a CardSecure token generated from the data provided in the request.
        Either the account or devicedata field must be provided.
        * <a href="https://www.wikipedia.com">Documentation List Point 1</a> = <i>true</i>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenizeRequest'
            examples:
              PaymentCard:
                summary: TokenizeRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardRequestExample'
              PaymentCard CardPointe Terminal Entry:
                summary: TokenizeRequest with PaymentCard via CardPointe Terminal
                $ref: '#/components/examples/PaymentCardTerminalRequestExample'
              ACH Unencrypted:
                summary: TokenizeRequest with Unencrypted ACH
                $ref: '#/components/examples/ACHRequestExample'
              GooglePay:
                summary: TokenizeRequest with GooglePay
                $ref: '#/components/examples/GooglePayRequestExample'
              ApplePay:
                summary: TokenizeRequest with ApplePay
                $ref: '#/components/examples/ApplePayRequestExample'
      responses:
        000:
          $ref: '#/components/responses/TokenizeResponse'
        003:
          $ref: '#/components/responses/WrongVersion'
        007:
          $ref: '#/components/responses/InvalidAction'
        008:
          $ref: '#/components/responses/DataNotDecimal'
        012:
          $ref: '#/components/responses/KeyIDNotFound'
        013:
          $ref: '#/components/responses/DataTooLong'
        014:
          $ref: '#/components/responses/DataEmpty'
        016:
          $ref: '#/components/responses/UnknownAlgo'
        017:
          $ref: '#/components/responses/EncryptionFailure'
        019:
          $ref: '#/components/responses/Base64Failure'
        020:
          $ref: '#/components/responses/CryptoWrongLength'
        021:
          $ref: '#/components/responses/DataTooShort'
        022:
          $ref: '#/components/responses/CCNWrongLength'
        024:
          $ref: '#/components/responses/DecryptionFailure'
        025:
          $ref: '#/components/responses/BadPadding'
        026:
          $ref: '#/components/responses/BadDecrypt'
        027:
          $ref: '#/components/responses/KeystoreNotInit'
        033:
          $ref: '#/components/responses/ApplicationNotInit'
        035:
          $ref: '#/components/responses/BufferTooShort'
        038:
          $ref: '#/components/responses/IllegalCharacter'
        039:
          $ref: '#/components/responses/WrongLength'
        043:
          $ref: '#/components/responses/ServerFailed'
        044:
          $ref: '#/components/responses/ConfigItemBad'
        046:
          $ref: '#/components/responses/TokenDataProb'
        047:
          $ref: '#/components/responses/UnAuthHost'
        048:
          $ref: '#/components/responses/TokenPurged'
        049:
          $ref: '#/components/responses/DataNotFound'
        050:
          $ref: '#/components/responses/ErrorHashing'
        053:
          $ref: '#/components/responses/TokenDuplicate'
        054:
          $ref: '#/components/responses/LuhnFailure'
        055:
          $ref: '#/components/responses/MissingSiteName'
        056:
          $ref: '#/components/responses/TokenFormatBad'
        057:
          $ref: '#/components/responses/RequestSignatureInvalid'
        058:
          $ref: '#/components/responses/RequestSignatureExpired'
        059:
          $ref: '#/components/responses/RequestSignatureMismatch'
        060:
          $ref: '#/components/responses/RequestSignatureInvalid'
        061:
          $ref: '#/components/responses/PINTranslationFail'
        063:
          $ref: '#/components/responses/KeystoreImportFail'
        064:
          $ref: '#/components/responses/KeystoreUserstoreFail'
        065:
          $ref: '#/components/responses/KeystoreInvalidProc'
        066:
          $ref: '#/components/responses/UnauthTerminal'
        068:
          $ref: '#/components/responses/KeystoreRollbackFail'
        071:
          $ref: '#/components/responses/UnauthDecrypt'
        072:
          $ref: '#/components/responses/InvalidEMVData'
        073:
          $ref: '#/components/responses/EMVDataEmpty'
        074:
          $ref: '#/components/responses/MissingReqParam'
        075:
          $ref: '#/components/responses/InvalidEllipticParam'
        076:
          $ref: '#/components/responses/JSONSerializationError'
        077:
          $ref: '#/components/responses/JSONDeserializationError'
        078:
          $ref: '#/components/responses/InvalidSwipeData'
        parameters:
            - {$ref: '#/components/parameters/ContentTypeHeader'}
            - {$ref: '#/components/parameters/ApiKeyHeader'}
            - {$ref: '#/components/parameters/TimestampHeader'}
            - {$ref: '#/components/parameters/AcceptLanguageHeader'}
            - {$ref: '#/components/parameters/MessageDigestHeader'}
  /cardsecure/api/v1/echo:
    x-model-version: 1.0
    post:
      tags:
        - Echo
      x-group-name: 'CardSecure'
      x-proxy-name: 'Echo'
      x-default-example: echoId
      summary: Send a ping command to the server.
      description: A call to the echo service endpoint sends a ping command to the CardSecure server to verify the application's connection.
      requestBody:
        required: true
        content:
          application/JSON:
            schema:
              $ref: '#/components/schemas/EchoRequest'
            examples:
              echoId:
                summary: Echo request using Message
                $ref: '#/components/examples/EchoRequestExample'
      responses:
        00:
          $ref: '#/components/examples/EchoResponseExample'
        03:
          $ref: '#/components/responses/WrongVersion'
        07:
          $ref: '#/components/responses/InvalidAction'
        08:
          $ref: '#/components/responses/DataNotDecimal'
        12:
          $ref: '#/components/responses/KeyIDNotFound'
        13:
          $ref: '#/components/responses/DataTooLong'
        14:
          $ref: '#/components/responses/DataEmpty'
        16:
          $ref: '#/components/responses/UnknownAlgo'
        17:
          $ref: '#/components/responses/EncryptionFailure'
        19:
          $ref: '#/components/responses/Base64Failure'
        20:
          $ref: '#/components/responses/CryptoWrongLength'
        21:
          $ref: '#/components/responses/DataTooShort'
        22:
          $ref: '#/components/responses/CCNWrongLength'
        24:
          $ref: '#/components/responses/DecryptionFailure'
        25:
          $ref: '#/components/responses/BadPadding'
        26:
          $ref: '#/components/responses/BadDecrypt'
        27:
          $ref: '#/components/responses/KeystoreNotInit'
        33:
          $ref: '#/components/responses/ApplicationNotInit'
        35:
          $ref: '#/components/responses/BufferTooShort'
        38:
          $ref: '#/components/responses/IllegalCharacter'
        39:
          $ref: '#/components/responses/WrongLength'
        43:
          $ref: '#/components/responses/ServerFailed'
        44:
          $ref: '#/components/responses/ConfigItemBad'
        46:
          $ref: '#/components/responses/TokenDataProb'
        47:
          $ref: '#/components/responses/UnAuthHost'
        48:
          $ref: '#/components/responses/TokenPurged'
        49:
          $ref: '#/components/responses/DataNotFound'
        50:
          $ref: '#/components/responses/ErrorHashing'
        53:
          $ref: '#/components/responses/TokenDuplicate'
        54:
          $ref: '#/components/responses/LuhnFailure'
        55:
          $ref: '#/components/responses/MissingSiteName'
        56:
          $ref: '#/components/responses/TokenFormatBad'
        57:
          $ref: '#/components/responses/RequestSignatureInvalid'
        58:
          $ref: '#/components/responses/RequestSignatureExpired'
        59:
          $ref: '#/components/responses/RequestSignatureMismatch'
        60:
          $ref: '#/components/responses/RequestSignatureInvalid'
        61:
          $ref: '#/components/responses/PINTranslationFail'
        63:
          $ref: '#/components/responses/KeystoreImportFail'
        64:
          $ref: '#/components/responses/KeystoreUserstoreFail'
        65:
          $ref: '#/components/responses/KeystoreInvalidProc'
        66:
          $ref: '#/components/responses/UnauthTerminal'
        68:
          $ref: '#/components/responses/KeystoreRollbackFail'
        71:
          $ref: '#/components/responses/UnauthDecrypt'
        72:
          $ref: '#/components/responses/InvalidEMVData'
        73:
          $ref: '#/components/responses/EMVDataEmpty'
        74:
          $ref: '#/components/responses/MissingReqParam'
        75:
          $ref: '#/components/responses/InvalidEllipticParam'
        76:
          $ref: '#/components/responses/JSONSerializationError'
        77:
          $ref: '#/components/responses/JSONDeserializationError'
        78:
          $ref: '#/components/responses/InvalidSwipeData'
        parameters:
          - $ref: '#/components/parameters/ContentTypeHeader'
          - $ref: '#/components/parameters/ApiKeyHeader'
          - $ref: '#/components/parameters/TimestampHeader'
          - $ref: '#/components/parameters/AcceptLanguageHeader'
          - $ref: '#/components/parameters/MessageDigestHeader'
components:
  parameters:
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {
        type: string,
        default: "Message-Digest"
       }
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {
        type: string,
        default: "Accept-Language"
       }
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {
        type: string,
        default: "Api-Key"
       }
      in: header
      required: true
      description: API key provided to the merchant associating the requests with the appropriate app in the Developer Portal.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    AccountParam:
      x-model-version: 1.0
      name: account
      schema: {
          type: string,
          default: 4444333322221111
        }
      in: header
      required: false
      description: This field is required only if devicedata is absent.
                    One of the following,
                      A clear or encrypted payment account number (PAN)
                      An ACH routing and account number string in the format <routing>/<account> for eCheck transactions
                    If encryptionhandler is provided, the account is treated as an encrypted PAN.
    DeviceDataParam:
      x-model-version: 1.0
      name: devicedata
      schema: {
          type: string
          }
      in: header
      description: This field is required only if account is absent.
    CVVParam:
      x-model-version: 1.0
      name: cvv
      schema: {
          type: number,
        }
      in: header
      description: Card Verification Value (CVV)
    ExpiryParam:
      x-model-version: 1.0
      name: expiry
      schema:
        {
          type: number,
        }
      in: header
      description: Expiration date
    SigParam:
      x-model-version: 1.0
      name: signature
      schema:
        {
          type: string,
        }
      in: header
      description: Signature data is the form of a Base64-encoded, Gzipped bitmap (BMP)
    EncryptHandleParam:
      x-model-version: 1.0
      name: encryptionhandler
      schema:
        {
          type: string,
        }
      in: header
      description: Encryption Handler. Either RSA, EX_APPLE_PAY, EX_GOOGLE_PAY
    UniqueParam:
      x-model-version: 1.0
      name: unique
      schema:
        {
          type: boolean,
        }
      in: header
      description: Specifies whether a unique token should be generated. Defaults to false.
    MessageParam:
      x-model-version: 1.0
      name: message
      schema:
        {
          type: string,
        }
      in: header
      description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
  schemas:
    ErrorCode:
      type: number
      description: An error code. Returns "00" if successful. All error codes contain four digits. Two zeros precede the codes.
      properties:
        errorcode:
          $ref: '#/components/responses'
        message:
          $ref: '#/components/responses'
    Error:
      x-model-version: 1.0
      description: Error information
      properties:
        type:
          description: 'The type of response either from the HOST, GATEWAY, NETWORK, or APIM.'
          type: string
        code: {
          description: 'Error response code from the host, gateway, or network',
          type: string
        }
        message: {
          description: 'Information specific to a propery or attribute.',
          type: string
        }
    EchoRequest:
      x-model-version: 1.0
      type: object
      properties:
        message:
          type: string
          maxLength: 250
          description: A message to send in the ping request and receive in the response. The value can be blank, however the message field must be included in the request.
    TokenizeRequest:
      x-model-version: 1.0
      - ref: '#/components/schemas/TokenizeRequestAccount'
        - type: object
          properties:
            account:
              type: string
              maxLength: 19
              description: Account number
              example: '4444333322221111'
        - ref: '#/components/schemas/TokenizeRequestDeviceData'
        - type: object
          properties:
            devicedata:
              type: string
              description: Either track data, ApplePay payment token, or GooglePay wallet payload.
              example: '2'
            oneOf:
              signature:
                type: String
                description: Saved image file of signature
                example: sig
              encryptionhandler:
                type: String
                description: Payment acceptance and encryption method.
  responses:
    TokenizeResponse:
      x-model-version: 1.0
      description: Contains the <a href="path">Gateway Response</a>
      content:
        message: {
          type: string,
          description: Status of the request. Returns "No Error" if the request was successful.
          example: 'No Error'
        }
        errorcode:
          $ref: '#/components/schemas/ErrorCode'
          example: 0
        token:
          type: String
          description: The token generated from the request data.
          example: '9417119164771111'
    EchoResponse:
      x-model-version: 1.0
      description: Contains the status of connection to CardSecure server.
      content:
        message:
          type: String
          description: The message value included in the request. Returns a descriptive error message if the request failed.
          example: 'Hello?'
        errorcode:
          - ref: '#/components/schemas/ErrorCode'
          example: 0
    WrongVersion:
      x-model-version: 1.0
      description: Wrong version number
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidAction:
      x-model-version: 1.0
      description: Invalid action
      content:
        application/json:
          schema:
            - ref: '#/components/schemas/Error'
    DataNotDecimal:
      x-model-version: 1.0
      description: Data is not decimal digits
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeyIDNotFound:
      x-model-version: 1.0
      description: Key ID is not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooLong:
      x-model-version: 1.0
      description: Data is too long
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    DataEmpty:
      x-model-version: 1.0
      description: Data is empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnknownAlgo:
      x-model-version: 1.0
      description: Unknown Algorithm
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EncryptionFailure:
      x-model-version: 1.0
      description: Encryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    Base64Failure:
      x-model-version: 1.0
      description: Base 64 decode failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CryptoWrongLength:
      x-model-version: 1.0
      description: Crypto data is the wrong length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataTooShort:
      x-model-version: 1.0
      description: Data is too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    CCNWrongLength:
      x-model-version: 1.0
      description: CCN wrong length on decryption
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DecryptionFailure:
      x-model-version: 1.0
      description: Decryption Failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadPadding:
      x-model-version: 1.0
      description: Bad PKCS 5 padding
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BadDecrypt:
      description: Bad decryption length field
    KeystoreNotInit:
      description: Keystore not initialized
    ApplicationNotInit:
      x-model-version: 1.0
      description: Application not initialized
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    BufferTooShort:
      x-model-version: 1.0
      description: Buffer too short
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    IllegalCharacter:
      x-model-version: 1.0
      description: Illegal characters
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    WrongLength:
      x-model-version: 1.0
      description: Wrong message length
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ServerFailed:
      x-model-version: 1.0
      description: Server failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ConfigItemBad:
      x-model-version: 1.0
      description: Config item is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDataProb:
      x-model-version: 1.0
      description: Token database problem
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnAuthHost:
      x-model-version: 1.0
      description: Unauthorized host
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenPurged:
      x-model-version: 1.0
      description: Token Purged
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    DataNotFound:
      x-model-version: 1.0
      description: Data not found
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    ErrorHashing:
      x-model-version: 1.0
      description: Error hashing the value
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenDuplicate:
      x-model-version: 1.0
      description: Token or data duplicate
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    LuhnFailure:
      x-model-version: 1.0
      description: Card number check (Luhn formula) failed
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingSiteName:
      x-model-version: 1.0
      description: Missing or unknown site name
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    TokenFormatBad:
      x-model-version: 1.0
      description: Token format is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureInvalid:
      x-model-version: 1.0
      description: Request signature is bad
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureExpired:
      x-model-version: 1.0
      description: Request signature timestamp expired
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureMismatch:
      x-model-version: 1.0
      description: Request signature mismatch
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    RequestSignatureFailure:
      x-model-version: 1.0
      description: Request signature failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    PINTranslationFail:
      x-model-version: 1.0
      description: PIN translation fail
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreImportFail:
      x-model-version: 1.0
      description: Keystore import failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreUserstoreFail:
      x-model-version: 1.0
      description: Keystore userstore failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreInvalidProc:
      x-model-version: 1.0
      description: Keystore invalid processor
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthTerminal:
      x-model-version: 1.0
      description: Unauthorized terminal
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    KeystoreRollbackFail:
      x-model-version: 1.0
      description: Keystore rollback failure
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    UnauthDecrypt:
      x-model-version: 1.0
      description: Unauthorized decrypt
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEMVData:
      x-model-version: 1.0
      description: Invalid EMV tag data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    EMVDataEmpty:
      x-model-version: 1.0
      description: EMV tag data empty
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    MissingReqParam:
      x-model-version: 1.0
      description: Missing required parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidEllipticParam:
      x-model-version: 1.0
      description: Invalid elliptic curve type parameter
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONSerializationError:
      x-model-version: 1.0
      description: JSON serialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    JSONDeserializationError:
      x-model-version: 1.0
      description: JSON deserialization error
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
    InvalidSwipeData:
      x-model-version: 1.0
      description: Invalid swipe data
      content:
        application/JSON:
          schema:
            $ref: '#/components/schemas/Error'
  examples:
    EchoRequestExample:
      value:
        message: 'Hello?'
        source:
          sourcetype: EchoRequest
    EchoResponseExample:
      value:
        message: 'Hello?'
        errorcode: 0
    TokenResponse:
      value:
        message: 'No Error'
        errorcode: 0
        token: 9417119164771111
    PaymentCardRequestExample:
      value:
        account: 4444333322221111
    PaymentCardTerminalRequestExample:
      value:
        devicedata: '2'
        signature: sig
    ACHRequestExample:
      value:
        account: 011401533/1234123412341234
    ApplePayRequestExample:
      value:
        encryptionhandler: EC_APPLE_PAY
        devicedata: '2'
    GooglePayRequestExample:
      value:
        encryptionhandler: EC_GOOGLE_PAY
        devicedata: '2'
